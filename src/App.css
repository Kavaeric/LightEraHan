/* Input form */
div.inputHeader {
    padding: 1rem;
    padding-top: 2rem;
    background-color: rgba(255, 255, 255, .12);
}

form.inputForm {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: auto 9rem;
    grid-template-areas: "label label" "field button";
    gap: .5rem;
}

label.inputTextLabel {
    grid-area: label;

    margin: 0;
    font-size: 1rem;
    text-transform: uppercase;

    font-weight: 600;
    letter-spacing: 0.05em;
}

textarea.inputTextField {
    grid-area: field;
    resize: vertical;
    min-height: 1.52rem;
    padding: .5rem;

    background-color: rgba(0, 0, 0, .2);
    border: 1px solid rgba(255, 255, 255, .5);

    color: #fff;
    font-size: 1.2rem;
    opacity: .7;

    transition: background-color .1s,
                border .1s,
                opacity .1s;
}
textarea.inputTextField:hover {
    opacity: 1;
}

textarea.inputTextField:active,
textarea.inputTextField:focus {
    opacity: 1;
    border-color: #fff;
    background-color: rgba(255, 255, 255, .05);
    outline: none;
}

button.inputTextSubmitBtn {
    font-size: 1.1rem;
}

/* Output rows */
div.output {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
}

/* Individual output row */
div.outputStep {
    display: flex;
    flex-direction: column;
    
    padding: 1rem;
    padding-bottom: 1rem;

    background: rgba(255, 255, 255, .12);
    background: linear-gradient(60deg, rgba(255, 255, 255, .15) 0%, rgba(255, 255, 255, .12) 40%);
    transition: all .1s;
}

div.outputStepHeader {
    display: flex;
    align-items: center;
    height: 2rem;
    gap: .5rem;

    margin-bottom: 1rem;
    border-bottom: 1px solid rgba(255, 255, 255, .1);
    padding-bottom: .5rem;
}

div.outputStep h1 {
    margin: 0;
    font-size: 1rem;
    text-transform: uppercase;

    font-weight: 600;
    letter-spacing: 0.05em;
}

div.outputStepHeader button.outputCopyBtn {
    padding: .3rem .6rem;
}
div.outputStepHeader button.outputCopyBtn:first-of-type {
    margin-left: auto;
}

/* If the step didn't involve any changes from the previous step */
div.outputStep.noChangesMade {
    background: rgba(255, 255, 255, .08);
}
div.outputStep.noChangesMade h1 {
    color: rgba(255, 255, 255, .5);
    text-decoration: line-through;
}

/* Internal div for the list of tokens in a given step/output */
div.tokenArrayOutput {
    display: flex;
    flex-wrap: wrap;
    gap: .2rem;
    font-size: 1.5rem;
}

/* Display of individual tokens (words/phrases) */
/* Previously done as anchor elements--HTML semantic spec would prefer buttons */
/* Buttons perform an action, anchor links navigate through the document */
button.tokenOutput {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: end;
    cursor: pointer;

    margin-top: .2rem;
    border: 2px solid rgba(255, 255, 255, .1);
    padding: .15rem .3rem;

    font-size: 1.5rem;
    font-weight: normal;
    color: inherit;
    background: rgba(0, 0, 0, .2);

    text-decoration: none;
    transition: border-color .1s,
                color .1s,
                background-color .1s;
}

/* Tokens that have been changed through one of the steps */
button.tokenOutput.tokenHasChanged {
    border-color: rgba(255, 255, 255, .3);
}

button.tokenOutput.tokenHighlightedMain {
    background-color: #fff;
}

/* Unknown tokens */
button.tokenOutput.tokenUnknown {
    border-color: rgba(255, 85, 85, 0.3);
    color: rgba(255, 255, 255, .8);
}

/* Hover effects */
button.tokenOutput:hover,
button.tokenOutput:focus {
    border-color: rgba(255, 255, 255, .5);
}

/* Colour-coding different token types */
button.tokenOutput.tokenParticle {
    color: #fbb;
}
button.tokenOutput.tokenParticle.tokenHighlighted {
    border-color: #fbb;
}
button.tokenOutput.tokenParticle.tokenHighlightedMain {
    background: #fbb;
}

button.tokenOutput.tokenNoun {
    color: #fbf;
}
button.tokenOutput.tokenNoun.tokenHighlighted {
    border-color: #fbf;
}
button.tokenOutput.tokenNoun.tokenHighlightedMain {
    background-color: #fbf;
}

button.tokenOutput.tokenVerb,
button.tokenOutput.tokenVerbAux {
    color: #aef;
}
button.tokenOutput.tokenVerbAux {
    margin-left: 0;
}
button.tokenOutput.tokenVerb.tokenHighlighted,
button.tokenOutput.tokenVerbAux.tokenHighlighted {
    border-color: #aef;
}
button.tokenOutput.tokenVerb.tokenHighlightedMain,
button.tokenOutput.tokenVerbAux.tokenHighlightedMain {
    background-color: #aef;
}

button.tokenOutput.tokenInterjection {
    color: #fea;
}
button.tokenOutput.tokenInterjection.tokenHighlighted {
    border-color: #fea;
}
button.tokenOutput.tokenInterjection.tokenHighlightedMain {
    background-color: #fea;
}

button.tokenOutput.tokenAdjective {
    color: #bfb;
}
button.tokenOutput.tokenAdjective.tokenHighlighted {
    border-color: #bfb;
}
button.tokenOutput.tokenAdjective.tokenHighlightedMain {
    background-color: #bfb;
}

button.tokenOutput.tokenSymbol {
    opacity: 0.5;
    border-color: transparent;
    background: transparent;
}
button.tokenOutput.tokenSymbol:hover {
    border-color: rgba(255, 255, 255, .2);
}

button.tokenOutput.tokenSymbol.tokenHighlightedMain {
    background: #fff;
}

/* Tokens highlighted on select */
button.tokenOutput.tokenHighlighted {
    border-color: rgba(255, 255, 255, .8);
    border-width: 2px;
    box-shadow: 0 0 1em rgba(255, 255, 255, .1);
}

button.tokenOutput.tokenHighlightedMain {
    border-color: transparent;
    color: #222;
    z-index: 9;
}

/* Ruby/furigana display */
button.tokenOutput span.tokenRuby {
    font-size: .4em;
    letter-spacing: 0;
    opacity: .8;
}

/* Final output row */
div.tokenArrayOutput.resultOutput {
    gap: 0;
}

div.tokenArrayOutput.resultOutput .tokenOutput {
    font-size: 1.8rem;
}

div.tokenArrayOutput.resultOutput button.tokenOutput {
    padding: 0;
    border-top-color: transparent;
    border-left-color: transparent;
    border-right-color: transparent;
}

div.tokenArrayOutput.resultOutput button.tokenOutput:not(:active):not(:hover):not(.tokenHighlighted):not(.tokenHighlightedMain) {
    border-color: transparent;
}

div.tokenArrayOutput.resultOutput button.tokenOutput:not(:active):not(.tokenHighlightedMain) {
    background: transparent;
    box-shadow: none;
}
